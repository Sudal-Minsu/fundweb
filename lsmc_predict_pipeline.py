# combined_pipeline.py
from predict_pipeline import predict_today_candidates
from trading_utils import (
    get_current_price, lsmc_expected_profit, send_order,
    get_engine, BUY_QUANTITY
)
import time

def run_combined_pipeline():
    portfolio = {}  # ÌòÑÏû¨ Î≥¥Ïú† Ï¢ÖÎ™©
    engine = get_engine()

    while True:
        try:
            print("\nüìà GRU Í∏∞Î∞ò Îß§Ïàò ÌõÑÎ≥¥ Ï∂îÏ∂ú Ï§ë...")
            top_candidates = predict_today_candidates(engine)

            for candidate in top_candidates:
                code = candidate['code']
                price = get_current_price(code)
                if price is None:
                    print(f"‚ùå ÌòÑÏû¨Í∞Ä Ïã§Ìå®: {code}")
                    continue

                expected_profit = lsmc_expected_profit(code, price)
                print(f"[{code}] ÌôïÎ•†: {candidate['prob_up']:.2f}, Í∏∞ÎåÄÏàòÏùµ: {expected_profit:.2f}, ÌòÑÏû¨Í∞Ä: {price}")

                # Îß§Ïàò Ï°∞Í±¥
                if code not in portfolio and expected_profit > 500:
                    res = send_order(code, price, BUY_QUANTITY, order_type="buy")
                    print(f"‚úÖ Îß§Ïàò: {code} | Í≤∞Í≥º: {res}")
                    portfolio[code] = {'buy_price': price, 'qty': BUY_QUANTITY}

                # Îß§ÎèÑ Ï°∞Í±¥
                elif code in portfolio:
                    buy_price = portfolio[code]['buy_price']
                    if expected_profit < 300 or price < buy_price * 0.98:
                        res = send_order(code, price, portfolio[code]['qty'], order_type="sell")
                        print(f"‚úÖ Îß§ÎèÑ: {code} | Í≤∞Í≥º: {res}")
                        del portfolio[code]

            time.sleep(15)  # 15Ï¥àÎßàÎã§ Ïû¨ÌèâÍ∞Ä

        except KeyboardInterrupt:
            print("‚èπ ÏûêÎèôÎß§Îß§ Ï¢ÖÎ£å")
            break
        except Exception as e:
            print(f"‚ö†Ô∏è Ïò§Î•ò Î∞úÏÉù: {e}")
            time.sleep(10)

if __name__ == "__main__":
    run_combined_pipeline()
